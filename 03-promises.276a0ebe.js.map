{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAmCpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAM,C,SAAEF,E,MAAUC,GAClBE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQL,GAERM,EAAON,EAAI,GAEZD,EAAM,G,CA5CbL,EAAKc,iBAAiB,UAAUC,IAChCA,EAAMC,iBAEN,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAC7C,IAAIC,EAAaC,OAAON,EAAMO,OAC9B,MAAMC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAGhC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EAClDC,EAAA7B,GAAS8B,OAAOC,QACd,8DAFN,CAOI,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAaI,IAChC3B,EAAc2B,EAAGR,GACdS,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA7B,GAAS8B,OAAOI,QACd,uBAAqB5B,QAAiBC,MAAU,IAEnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA7B,GAAS8B,OAAOC,QACd,sBAAoBzB,QAAeC,MAAU,IAGnDiB,GAAcG,EAGlBzB,EAAKkC,O,CAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\nevent.preventDefault();\n  \nconst { delay, step, amount } = event.target.elements;\nlet delayValue = Number(delay.value);\nconst stepValue = Number(step.value);\nconst amountValue = Number(amount.value);\n \n  \n  if (delayValue < 0 || stepValue < 0 || amountValue <= 0) {\n      Notiflix.Notify.failure(\n        'Values must be above zero. Please check and try again.'\n      );\n    return;\n    \n    } else {\n      for (let i = 1; i <= amountValue; i++) {\n        createPromise(i, delayValue )\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${delay}ms`);\n          });\n   \n        delayValue += stepValue;\n      }\n    }\n    form.reset();\n  });\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","target","elements","delayValue","Number","value","stepValue","amountValue","$parcel$interopDefault","Notify","failure","i","then","success","catch","reset"],"version":3,"file":"03-promises.276a0ebe.js.map"}